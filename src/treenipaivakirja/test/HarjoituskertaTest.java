package treenipaivakirja.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import treenipaivakirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.09 14:54:34 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class HarjoituskertaTest {



  // Generated by ComTest BEGIN
  /** testGetPvm159 */
  @Test
  public void testGetPvm159() {    // Harjoituskerta: 159
    Harjoituskerta juoksu1 = new Harjoituskerta(); 
    juoksu1.vastaaJuoksu(); 
    { String _l_=juoksu1.getPvm(),_r_="7.12.20"; if ( !_l_.matches(_r_) ) fail("From: Harjoituskerta line: 162" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetKesto183 */
  @Test
  public void testGetKesto183() {    // Harjoituskerta: 183
    Harjoituskerta juoksu1 = new Harjoituskerta(); 
    juoksu1.vastaaJuoksu(); 
    { String _l_=juoksu1.getKesto(),_r_="44:32"; if ( !_l_.matches(_r_) ) fail("From: Harjoituskerta line: 186" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetMatka198 */
  @Test
  public void testGetMatka198() {    // Harjoituskerta: 198
    Harjoituskerta juoksu1 = new Harjoituskerta(); 
    juoksu1.vastaaJuoksu(); 
    { String _l_=juoksu1.getMatka(),_r_="7.0"; if ( !_l_.matches(_r_) ) fail("From: Harjoituskerta line: 201" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetKuormittavuus213 */
  @Test
  public void testGetKuormittavuus213() {    // Harjoituskerta: 213
    Harjoituskerta juoksu1 = new Harjoituskerta(); 
    juoksu1.vastaaJuoksu(); 
    { String _l_=juoksu1.getKuormittavuus(),_r_="6"; if ( !_l_.matches(_r_) ) fail("From: Harjoituskerta line: 216" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetKommentti228 */
  @Test
  public void testGetKommentti228() {    // Harjoituskerta: 228
    Harjoituskerta juoksu1 = new Harjoituskerta(); 
    juoksu1.vastaaJuoksu(); 
    { String _l_=juoksu1.getKommentti(),_r_="Jaksoin juosta todella hyvin"; if ( !_l_.matches(_r_) ) fail("From: Harjoituskerta line: 231" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString241 */
  @Test
  public void testToString241() {    // Harjoituskerta: 241
    Harjoituskerta har = new Harjoituskerta(); 
    har.rekisteroi(); 
    har.vastaaJuoksu(); 
    assertEquals("From: Harjoituskerta line: 245", "1|7.12.20|1|44:32|7.0|6|Jaksoin juosta todella hyvin", har.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse260 */
  @Test
  public void testParse260() {    // Harjoituskerta: 260
    Harjoituskerta har = new Harjoituskerta(); 
    har.parse("   1  |  7.12.20  |   1  | 44:32 | 7.0 | 6 |Jaksoin juosta todella hyvin  "); 
    assertEquals("From: Harjoituskerta line: 263", 1, har.getLajiNro()); 
    assertEquals("From: Harjoituskerta line: 264", "1|7.12.20|1|44:32|7.0|6|Jaksoin juosta todella hyvin", har.toString()); 
    har.rekisteroi(); 
    int n = har.getTunnusNro(); 
    har.parse(""+(n+20)); 
    har.rekisteroi(); 
    assertEquals("From: Harjoituskerta line: 270", n+20+1, har.getTunnusNro()); 
    assertEquals("From: Harjoituskerta line: 271", "" + (n+20+1) + "|7.12.20|1|44:32|7.0|6|Jaksoin juosta todella hyvin", har.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi324 */
  @Test
  public void testRekisteroi324() {    // Harjoituskerta: 324
    Harjoituskerta juoksu1 = new Harjoituskerta(); 
    assertEquals("From: Harjoituskerta line: 326", 0, juoksu1.getTunnusNro()); 
    juoksu1.rekisteroi(); 
    Harjoituskerta juoksu2 = new Harjoituskerta(); 
    juoksu2.rekisteroi(); 
    int n1 = juoksu1.getTunnusNro(); 
    int n2 = juoksu2.getTunnusNro(); 
    assertEquals("From: Harjoituskerta line: 332", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone346 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone346() throws CloneNotSupportedException {    // Harjoituskerta: 346
    Harjoituskerta har = new Harjoituskerta(); 
    har.parse("   1  |  7.12.20  |   1  | 44:32 | 7.0 | 6 |Jaksoin juosta todella hyvin  "); 
    Harjoituskerta kopio = har.clone(); 
    assertEquals("From: Harjoituskerta line: 351", har.toString(), kopio.toString()); 
    har.parse(" 2  |  9.12.20  |   2 | 45:21 | 5.0 | 7 | Ihan OK meni "); 
    assertEquals("From: Harjoituskerta line: 353", false, kopio.toString().equals(har.toString())); 
  } // Generated by ComTest END
}